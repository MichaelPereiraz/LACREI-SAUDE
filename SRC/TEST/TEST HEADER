import { render } from '@testing-library/react';
import { screen, fireEvent } from '@testing-library/dom';
import userEvent from '@testing-library/user-event';
import { BrowserRouter } from 'react-router-dom';
import { describe, it, expect, vi } from 'vitest';
import '@testing-library/jest-dom';
import Header from '../components/Header';

// Mock for the assets
vi.mock('../assets/lacrei-logo.png', () => ({
  default: '/mocked-logo.png'
}));

const HeaderWithRouter = () => (
  <BrowserRouter>
    <Header />
  </BrowserRouter>
);

describe('Header Component', () => {
  it('renders the Lacrei Saúde logo and brand name', () => {
    render(<HeaderWithRouter />);
    
    const logo = screen.getByAltText('Lacrei Saúde');
    const brandName = screen.getByText('Lacrei Saúde');
    
    expect(logo).toBeInTheDocument();
    expect(brandName).toBeInTheDocument();
  });

  it('renders all navigation links', () => {
    render(<HeaderWithRouter />);
    
    expect(screen.getByText('Início')).toBeInTheDocument();
    expect(screen.getByText('Sobre Nós')).toBeInTheDocument();
    expect(screen.getByText('Serviços')).toBeInTheDocument();
  });

  it('renders CTA buttons', () => {
    render(<HeaderWithRouter />);
    
    expect(screen.getByLabelText('Entrar na plataforma')).toBeInTheDocument();
    expect(screen.getByLabelText('Cadastrar-se na Lacrei Saúde')).toBeInTheDocument();
  });

  it('toggles mobile menu when button is clicked', () => {
    render(<HeaderWithRouter />);
    
    const mobileMenuButton = screen.getByLabelText('Abrir menu');
    fireEvent.click(mobileMenuButton);
    
    expect(screen.getByLabelText('Fechar menu')).toBeInTheDocument();
    expect(screen.getByRole('navigation', { name: 'Navegação móvel' })).toBeInTheDocument();
  });

  it('has proper accessibility attributes', () => {
    render(<HeaderWithRouter />);
    
    const header = screen.getByRole('banner');
    const navigation = screen.getByRole('navigation', { name: 'Navegação principal' });
    const skipLink = screen.getByText('Pular para o conteúdo principal');
    
    expect(header).toBeInTheDocument();
    expect(navigation).toBeInTheDocument();
    expect(skipLink).toHaveClass('skip-link');
  });

  it('applies active state to current page link', () => {
    // Mock location for testing active state
    Object.defineProperty(window, 'location', {
      value: { pathname: '/' },
      writable: true
    });
    
    render(<HeaderWithRouter />);
    
    const homeLink = screen.getByText('Início').closest('a');
    expect(homeLink).toHaveAttribute('aria-current', 'page');
  });
});
